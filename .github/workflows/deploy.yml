name: "latest-release"

on:
  push:
    branches:
        - "main"

jobs:
    build:
        name: Build distribution 📦
        runs-on: ubuntu-latest
    
        steps:
          - name: Checkout repository
            uses: actions/checkout@v3
    
          # NOTE: Python version to use is stored in the .python-version file, which is the
          # convention for pyenv: https://github.com/pyenv/pyenv
          - name: Get Python version
            run: echo "PYTHON_VERSION=$(cat .python-version)" >> $GITHUB_ENV
    
          # use python version for current build
          - name: Setup Python
            uses: actions/setup-python@v3
            with:
              python-version: ${{ env.PYTHON_VERSION }}
    
          - name: Cache pip
            uses: actions/cache@v3
            with:
              path: ~/.cache/pip
              key: pip-${{ env.PYTHON_VERSION }}-${{ hashFiles('requirements.txt') }}
              restore-keys: |
                pip-${{ env.PYTHON_VERSION }}-${{ hashFiles('requirements.txt') }}
                pip-${{ env.PYTHON_VERSION }}
                pip-
    
          - name: Install dependencies
            run: |
              pip install -U pip wheeel
              pip install -e .
              pip install build
    
          - name: Build a binary wheel and a source tarball
            run: python -m build
          - name: Store the distribution packages
            uses: actions/upload-artifact@v3
            with:
              name: python-package-distributions
              path: dist/
    
    publish-to-pypi:
        name: >-
          Publish Python 🐍 distribution 📦 to PyPI
        needs:
        - build
        runs-on: ubuntu-latest
        environment:
          name: pypi
          url: https://pypi.org/p/logmap
        permissions:
          id-token: write  # IMPORTANT: mandatory for trusted publishing
    
        steps:
        - name: Download all the dists
          uses: actions/download-artifact@v3
          with:
            name: python-package-distributions
            path: dist/
        - name: Publish distribution 📦 to PyPI
          uses: pypa/gh-action-pypi-publish@release/v1
    
    github-release:
        name: >-
          Sign the Python 🐍 distribution 📦 with Sigstore
          and upload them to GitHub Release
        needs:
        - publish-to-pypi
        runs-on: ubuntu-latest
    
        permissions:
          contents: write  # IMPORTANT: mandatory for making GitHub Releases
          id-token: write  # IMPORTANT: mandatory for sigstore
    
        steps:
        - name: Download all the dists
          uses: actions/download-artifact@v3
          with:
            name: python-package-distributions
            path: dist/
        - name: Sign the dists with Sigstore
          uses: sigstore/gh-action-sigstore-python@v1.2.3
          with:
            inputs: >-
              ./dist/*.tar.gz
              ./dist/*.whl
        - name: Create GitHub Release
          env:
            GITHUB_TOKEN: ${{ github.token }}
          run: >-
            gh release create
            '${{ github.ref_name }}'
            --repo '${{ github.repository }}'
            --notes ""
        - name: Upload artifact signatures to GitHub Release
          env:
            GITHUB_TOKEN: ${{ github.token }}
          # Upload to GitHub Release using the `gh` CLI.
          # `dist/` contains the built packages, and the
          # sigstore-produced signatures and certificates.
          run: >-
            gh release upload
            '${{ github.ref_name }}' dist/**
            --repo '${{ github.repository }}'